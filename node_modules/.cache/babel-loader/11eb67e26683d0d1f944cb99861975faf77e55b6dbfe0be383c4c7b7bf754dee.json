{"ast":null,"code":"var _jsxFileName = \"E:\\\\royal\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Confetti from \"react-confetti\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { python } from \"@codemirror/lang-python\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [feedback, setFeedback] = useState(null);\n  const [score, setScore] = useState(null);\n  const [solution, setSolution] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [challenge, setChallenge] = useState(\"\");\n  const [challengeId, setChallengeId] = useState(null);\n  const [solvedCount, setSolvedCount] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [gameTimeLeft, setGameTimeLeft] = useState(900);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showLoginGlow, setShowLoginGlow] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const API_BASE_URL = \"http://127.0.0.1:5001\";\n  const startGame = async () => {\n    if (!username.trim()) {\n      setError(\"Please enter a username!\");\n      return;\n    }\n    setShowLoginGlow(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Registration failed\");\n      }\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setTimeout(() => {\n        setIsPlaying(true);\n        fetchChallenge(true);\n        setShowLoginGlow(false);\n      }, 1000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const fetchChallenge = async (isFirst = false) => {\n    if (isGameOver) return;\n    setLoading(true);\n    setError(null);\n    try {\n      var _data$metadata;\n      const response = await fetch(`${API_BASE_URL}/get_challenge`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId,\n          question_number: solvedCount + 1\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Raw error response:\", errorText);\n        throw new Error(errorText || \"Failed to fetch challenge\");\n      }\n      const data = await response.json();\n      console.log(\"Response data:\", data);\n      if (data.completed) {\n        endGame(true);\n        return;\n      }\n      setChallenge(data.challenge.code);\n      setChallengeId(data.challenge.id);\n      setFeedback(null);\n      setScore(null);\n      setSolution(null);\n      setCode(\"\");\n      if ((_data$metadata = data.metadata) !== null && _data$metadata !== void 0 && _data$metadata.time_remaining) {\n        setGameTimeLeft(data.metadata.time_remaining);\n      }\n    } catch (err) {\n      console.error(\"Fetch error:\", err);\n      setError(`Failed to load challenge: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const evaluateCode = async () => {\n    if (!code.trim()) {\n      setError(\"Please enter code to evaluate!\");\n      return;\n    }\n    if (!code.includes(\"def \") || !code.includes(\"(\") || !code.includes(\")\")) {\n      setError(\"Code must contain a function definition\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/evaluate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId,\n          code,\n          challenge_code: challenge,\n          challenge_id: challengeId\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Evaluation failed\");\n      }\n      const data = await response.json();\n      setFeedback(data.feedback);\n      setScore(data.score);\n      setTotalScore(data.total_score);\n      if (data.is_completed) {\n        endGame(true);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchSolution = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/get_solution`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId,\n          code: challenge\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch solution\");\n      }\n      const data = await response.json();\n      setSolution(data.solution);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleNextOrFinish = async () => {\n    if (solvedCount >= 9) {\n      endGame(true);\n      return;\n    }\n    if (!feedback) {\n      setError(\"Please evaluate code first!\");\n      return;\n    }\n    await fetchChallenge();\n    setSolvedCount(prev => prev + 1);\n  };\n  const endGame = (isComplete = false) => {\n    setIsGameOver(true);\n    if (isComplete) {\n      setShowConfetti(true);\n      setSolvedCount(10);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  useEffect(() => {\n    if (!isPlaying || isGameOver) return;\n    const timer = setInterval(() => {\n      setGameTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          endGame(false);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isPlaying, isGameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${showLoginGlow ? 'login-glow' : ''}`,\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      recycle: false,\n      numberOfPieces: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 24\n    }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"neon-title\",\n          children: \"REFACTOR ROYALE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"ENTER USERNAME\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"neon-input\",\n          onKeyPress: e => e.key === 'Enter' && startGame()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startGame,\n          className: \"neon-button neon-button-cyan\",\n          children: \"START CODING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"neon-title\",\n            children: \"CODE OPTIMIZER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"PLAYER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-cyan\",\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"SOLVED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-purple\",\n                children: [solvedCount, \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"SCORE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-green\",\n                children: totalScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"TIME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-red\",\n                children: formatTime(gameTimeLeft)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this) : isGameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: solvedCount >= 10 ? \"neon-text-green\" : \"neon-text-red\",\n            children: solvedCount >= 10 ? \"MISSION COMPLETE!\" : \"TIME'S UP!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"final-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"FINAL SCORE:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: totalScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"CHALLENGES SOLVED:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [solvedCount, \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.location.reload(),\n            className: \"neon-button neon-button-magenta\",\n            children: \"NEW GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"challenge-card glassmorphic\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"CHALLENGE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"neon-code\",\n              children: challenge || \"Loading challenge...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-container\",\n            children: /*#__PURE__*/_jsxDEV(CodeMirror, {\n              value: code,\n              height: \"200px\",\n              extensions: [python()],\n              onChange: setCode,\n              placeholder: \"# Optimize this Python function...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evaluateCode,\n              disabled: loading,\n              className: \"neon-button neon-button-blue\",\n              children: loading ? \"EVALUATING...\" : \"EVALUATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextOrFinish,\n              disabled: !feedback || loading,\n              className: \"neon-button neon-button-magenta\",\n              children: solvedCount >= 9 ? \"FINISH\" : \"NEXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 27\n          }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-card glassmorphic\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"FEEDBACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 21\n            }, this), score && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"score-display\",\n              children: [\"Score: \", score, \"/10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: fetchSolution,\n              className: \"neon-button neon-button-cyan\",\n              children: \"VIEW SOLUTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution-card glassmorphic\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"OPTIMAL SOLUTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: solution\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9K+FDE58Y6a4B6k1YcdygOBC5BM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Confetti","CodeMirror","python","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","isPlaying","setIsPlaying","code","setCode","feedback","setFeedback","score","setScore","solution","setSolution","loading","setLoading","error","setError","challenge","setChallenge","challengeId","setChallengeId","solvedCount","setSolvedCount","totalScore","setTotalScore","gameTimeLeft","setGameTimeLeft","isGameOver","setIsGameOver","showConfetti","setShowConfetti","showLoginGlow","setShowLoginGlow","sessionId","setSessionId","API_BASE_URL","startGame","trim","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","session_id","setTimeout","fetchChallenge","err","message","isFirst","_data$metadata","question_number","errorText","text","console","log","completed","endGame","id","metadata","time_remaining","evaluateCode","includes","challenge_code","challenge_id","total_score","is_completed","fetchSolution","handleNextOrFinish","prev","isComplete","formatTime","seconds","mins","Math","floor","secs","toString","padStart","timer","setInterval","clearInterval","className","children","recycle","numberOfPieces","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","window","location","reload","height","extensions","disabled","_c","$RefreshReg$"],"sources":["E:/royal/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport { python } from \"@codemirror/lang-python\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n  const [solution, setSolution] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [challenge, setChallenge] = useState(\"\");\r\n  const [challengeId, setChallengeId] = useState(null);\r\n  const [solvedCount, setSolvedCount] = useState(0);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [gameTimeLeft, setGameTimeLeft] = useState(900);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [showLoginGlow, setShowLoginGlow] = useState(false);\r\n  const [sessionId, setSessionId] = useState(null);\r\n\r\n  const API_BASE_URL = \"http://127.0.0.1:5001\";\r\n\r\n  const startGame = async () => {\r\n    if (!username.trim()) {\r\n      setError(\"Please enter a username!\");\r\n      return;\r\n    }\r\n    setShowLoginGlow(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Registration failed\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSessionId(data.session_id);\r\n      \r\n      setTimeout(() => {\r\n        setIsPlaying(true);\r\n        fetchChallenge(true);\r\n        setShowLoginGlow(false);\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchChallenge = async (isFirst = false) => {\r\n    if (isGameOver) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_challenge`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          username,\r\n          session_id: sessionId,\r\n          question_number: solvedCount + 1\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error(\"Raw error response:\", errorText);\r\n        throw new Error(errorText || \"Failed to fetch challenge\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Response data:\", data);\r\n\r\n      if (data.completed) {\r\n        endGame(true);\r\n        return;\r\n      }\r\n\r\n      setChallenge(data.challenge.code);\r\n      setChallengeId(data.challenge.id);\r\n      setFeedback(null);\r\n      setScore(null);\r\n      setSolution(null);\r\n      setCode(\"\");\r\n      \r\n      if (data.metadata?.time_remaining) {\r\n        setGameTimeLeft(data.metadata.time_remaining);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Fetch error:\", err);\r\n      setError(`Failed to load challenge: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const evaluateCode = async () => {\r\n    if (!code.trim()) {\r\n      setError(\"Please enter code to evaluate!\");\r\n      return;\r\n    }\r\n    \r\n    if (!code.includes(\"def \") || !code.includes(\"(\") || !code.includes(\")\")) {\r\n      setError(\"Code must contain a function definition\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/evaluate`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          session_id: sessionId,\r\n          code,\r\n          challenge_code: challenge,\r\n          challenge_id: challengeId,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Evaluation failed\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setFeedback(data.feedback);\r\n      setScore(data.score);\r\n      setTotalScore(data.total_score);\r\n      \r\n      if (data.is_completed) {\r\n        endGame(true);\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSolution = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_solution`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          username,\r\n          session_id: sessionId,\r\n          code: challenge,\r\n        }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch solution\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSolution(data.solution);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleNextOrFinish = async () => {\r\n    if (solvedCount >= 9) {\r\n      endGame(true);\r\n      return;\r\n    }\r\n    if (!feedback) {\r\n      setError(\"Please evaluate code first!\");\r\n      return;\r\n    }\r\n    await fetchChallenge();\r\n    setSolvedCount(prev => prev + 1);\r\n  };\r\n\r\n  const endGame = (isComplete = false) => {\r\n    setIsGameOver(true);\r\n    if (isComplete) {\r\n      setShowConfetti(true);\r\n      setSolvedCount(10);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPlaying || isGameOver) return;\r\n    \r\n    const timer = setInterval(() => {\r\n      setGameTimeLeft(prev => {\r\n        if (prev <= 1) {\r\n          clearInterval(timer);\r\n          endGame(false);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(timer);\r\n  }, [isPlaying, isGameOver]);\r\n\r\n  return (\r\n    <div className={`app-container ${showLoginGlow ? 'login-glow' : ''}`}>\r\n      {showConfetti && <Confetti recycle={false} numberOfPieces={500} />}\r\n      \r\n      {!isPlaying ? (\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"login-container glassmorphic\">\r\n            <h1 className=\"neon-title\">REFACTOR ROYALE</h1>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ENTER USERNAME\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              className=\"neon-input\"\r\n              onKeyPress={(e) => e.key === 'Enter' && startGame()}\r\n            />\r\n            <button onClick={startGame} className=\"neon-button neon-button-cyan\">\r\n              START CODING\r\n            </button>\r\n            {error && <p className=\"error\">{error}</p>}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-container glassmorphic\">\r\n            <div className=\"game-header\">\r\n              <h1 className=\"neon-title\">CODE OPTIMIZER</h1>\r\n              <div className=\"stats-container\">\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">PLAYER</span>\r\n                  <span className=\"stat-value neon-cyan\">{username}</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">SOLVED</span>\r\n                  <span className=\"stat-value neon-purple\">{solvedCount}/10</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">SCORE</span>\r\n                  <span className=\"stat-value neon-green\">{totalScore}</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">TIME</span>\r\n                  <span className=\"stat-value neon-red\">{formatTime(gameTimeLeft)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {loading ? (\r\n              <div className=\"loading-spinner\"></div>\r\n            ) : isGameOver ? (\r\n              <div className=\"game-over\">\r\n                <h2 className={solvedCount >= 10 ? \"neon-text-green\" : \"neon-text-red\"}>\r\n                  {solvedCount >= 10 ? \"MISSION COMPLETE!\" : \"TIME'S UP!\"}\r\n                </h2>\r\n                <div className=\"final-stats\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">FINAL SCORE:</span>\r\n                    <span className=\"stat-value\">{totalScore}</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">CHALLENGES SOLVED:</span>\r\n                    <span className=\"stat-value\">{solvedCount}/10</span>\r\n                  </div>\r\n                </div>\r\n                <button \r\n                  onClick={() => window.location.reload()} \r\n                  className=\"neon-button neon-button-magenta\"\r\n                >\r\n                  NEW GAME\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"challenge-card glassmorphic\">\r\n                  <h3>CHALLENGE</h3>\r\n                  <pre className=\"neon-code\">{challenge || \"Loading challenge...\"}</pre>\r\n                </div>\r\n                \r\n                <div className=\"editor-container\">\r\n                  <CodeMirror\r\n                    value={code}\r\n                    height=\"200px\"\r\n                    extensions={[python()]}\r\n                    onChange={setCode}\r\n                    placeholder=\"# Optimize this Python function...\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"button-group\">\r\n                  <button\r\n                    onClick={evaluateCode}\r\n                    disabled={loading}\r\n                    className=\"neon-button neon-button-blue\"\r\n                  >\r\n                    {loading ? \"EVALUATING...\" : \"EVALUATE\"}\r\n                  </button>\r\n                  <button\r\n                    onClick={handleNextOrFinish}\r\n                    disabled={!feedback || loading}\r\n                    className=\"neon-button neon-button-magenta\"\r\n                  >\r\n                    {solvedCount >= 9 ? \"FINISH\" : \"NEXT\"}\r\n                  </button>\r\n                </div>\r\n                \r\n                {error && <p className=\"error\">{error}</p>}\r\n                \r\n                {feedback && (\r\n                  <div className=\"feedback-card glassmorphic\">\r\n                    <h3>FEEDBACK</h3>\r\n                    <p>{feedback}</p>\r\n                    {score && <p className=\"score-display\">Score: {score}/10</p>}\r\n                    <button \r\n                      onClick={fetchSolution}\r\n                      className=\"neon-button neon-button-cyan\"\r\n                    >\r\n                      VIEW SOLUTION\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                {solution && (\r\n                  <div className=\"solution-card glassmorphic\">\r\n                    <h3>OPTIMAL SOLUTION</h3>\r\n                    <pre>{solution}</pre>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}