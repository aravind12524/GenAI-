{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aravind Narayanan\\\\refactor-royale\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport Confetti from \"react-confetti\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { python } from \"@codemirror/lang-python\";\nimport \"./App.css\";\n\n// Constants\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\nconst GAME_DURATION = 900; // 15 minutes in seconds\nconst MAX_QUESTIONS = 10;\nfunction App() {\n  _s();\n  // State management\n  const [username, setUsername] = useState(localStorage.getItem(\"codingChallengeUsername\") || \"\");\n  const [gameState, setGameState] = useState({\n    isPlaying: false,\n    isGameOver: false,\n    loading: false,\n    error: null,\n    showConfetti: false,\n    showLoginGlow: false,\n    showReconnect: false,\n    isApiHealthy: false\n  });\n  const [codeState, setCodeState] = useState({\n    code: \"\",\n    challenge: \"\",\n    challengeId: null,\n    solution: null,\n    feedback: null,\n    score: null\n  });\n  const [progress, setProgress] = useState({\n    solvedCount: 0,\n    totalScore: 0,\n    gameTimeLeft: GAME_DURATION,\n    scoreTracker: {}\n  });\n\n  // Destructure state for easier access\n  const {\n    isPlaying,\n    isGameOver,\n    loading,\n    error,\n    showConfetti,\n    showLoginGlow,\n    showReconnect,\n    isApiHealthy\n  } = gameState;\n  const {\n    code,\n    challenge,\n    challengeId,\n    solution,\n    feedback,\n    score\n  } = codeState;\n  const {\n    solvedCount,\n    totalScore,\n    gameTimeLeft,\n    scoreTracker\n  } = progress;\n\n  // API service wrapper with timeout and error handling\n  const apiRequest = useCallback(async (endpoint, body = {}) => {\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), 8000); // 8 second timeout\n\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          ...body\n        }),\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      clearTimeout(timeoutId);\n      let errorMessage = \"Network error\";\n      if (error.name === \"AbortError\") {\n        errorMessage = \"Request timeout - server is not responding\";\n      } else if (error.message.includes(\"Failed to fetch\")) {\n        errorMessage = \"Cannot connect to server - check your network\";\n      } else {\n        errorMessage = error.message;\n      }\n      throw new Error(errorMessage);\n    }\n  }, [username]);\n\n  // Game management functions\n  const resetGame = useCallback(() => {\n    localStorage.removeItem(\"codingChallengeUsername\");\n    setGameState(prev => ({\n      ...prev,\n      isPlaying: false,\n      isGameOver: false,\n      error: \"Session expired - please register again\"\n    }));\n    setUsername(\"\");\n  }, []);\n  const endGame = useCallback(() => {\n    setGameState(prev => ({\n      ...prev,\n      isGameOver: true,\n      showConfetti: true\n    }));\n  }, []);\n\n  // API health check\n  useEffect(() => {\n    const checkHealth = async () => {\n      try {\n        await fetch(`${API_BASE_URL}/health`);\n        setGameState(prev => ({\n          ...prev,\n          isApiHealthy: true\n        }));\n      } catch {\n        setGameState(prev => ({\n          ...prev,\n          isApiHealthy: false\n        }));\n      }\n    };\n    checkHealth();\n    const interval = setInterval(checkHealth, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Session validation\n  useEffect(() => {\n    const validateSession = async () => {\n      if (isPlaying && username) {\n        try {\n          await apiRequest(\"/get_challenge\");\n        } catch (err) {\n          if (err.message.includes(\"Invalid session\")) {\n            resetGame();\n          }\n        }\n      }\n    };\n    const timer = setInterval(validateSession, 30000);\n    return () => clearInterval(timer);\n  }, [isPlaying, username, apiRequest, resetGame]);\n\n  // Game timer\n  useEffect(() => {\n    if (!isPlaying || isGameOver) return;\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev.gameTimeLeft <= 1) {\n          clearInterval(interval);\n          endGame();\n          return {\n            ...prev,\n            gameTimeLeft: 0\n          };\n        }\n        return {\n          ...prev,\n          gameTimeLeft: prev.gameTimeLeft - 1\n        };\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isPlaying, isGameOver, endGame]);\n\n  // Game functions\n  const startGame = useCallback(async () => {\n    if (!username.trim()) {\n      setGameState(prev => ({\n        ...prev,\n        error: \"⚠️ Please enter a username!\"\n      }));\n      return;\n    }\n    setGameState(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      await apiRequest(\"/register\");\n      localStorage.setItem(\"codingChallengeUsername\", username);\n      setGameState(prev => ({\n        ...prev,\n        isPlaying: true,\n        showLoginGlow: true,\n        showReconnect: false\n      }));\n      setTimeout(() => {\n        setGameState(prev => ({\n          ...prev,\n          showLoginGlow: false\n        }));\n        fetchChallenge(true);\n      }, 1000);\n    } catch (err) {\n      setGameState(prev => ({\n        ...prev,\n        error: `❌ ${err.message}`,\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\n      }));\n    } finally {\n      setGameState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  }, [username, apiRequest]);\n  const fetchChallenge = useCallback(async (isFirst = false) => {\n    if (solvedCount >= MAX_QUESTIONS || isGameOver) {\n      endGame();\n      return;\n    }\n    setGameState(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      var _data$challenge, _data$challenge2;\n      const data = await apiRequest(\"/get_challenge\");\n      if (data.completed) {\n        endGame();\n        return;\n      }\n      if (!((_data$challenge = data.challenge) !== null && _data$challenge !== void 0 && _data$challenge.code) || !((_data$challenge2 = data.challenge) !== null && _data$challenge2 !== void 0 && _data$challenge2.id)) {\n        throw new Error(\"Invalid challenge data received\");\n      }\n      setCodeState(prev => ({\n        ...prev,\n        challenge: data.challenge.code,\n        challengeId: data.challenge.id,\n        feedback: null,\n        score: null,\n        solution: null,\n        code: \"\"\n      }));\n      if (!isFirst) {\n        setProgress(prev => {\n          var _data$progress;\n          return {\n            ...prev,\n            solvedCount: ((_data$progress = data.progress) === null || _data$progress === void 0 ? void 0 : _data$progress.answered) || prev.solvedCount + 1,\n            gameTimeLeft: Math.floor(data.time_remaining || prev.gameTimeLeft)\n          };\n        });\n      }\n    } catch (err) {\n      setGameState(prev => ({\n        ...prev,\n        error: `❌ ${err.message}`,\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\n      }));\n      if (!isFirst) {\n        setTimeout(fetchChallenge, 2000);\n      }\n    } finally {\n      setGameState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  }, [solvedCount, isGameOver, endGame, apiRequest]);\n  const evaluateCode = useCallback(async () => {\n    if (!code.trim()) {\n      setGameState(prev => ({\n        ...prev,\n        error: \"⚠️ Enter code to evaluate!\"\n      }));\n      return;\n    }\n    if (!code.includes(\"def \") || !code.includes(\"(\") || !code.includes(\")\")) {\n      setGameState(prev => ({\n        ...prev,\n        error: \"⚠️ Code must contain a function definition\"\n      }));\n      return;\n    }\n    setGameState(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const data = await apiRequest(\"/evaluate\", {\n        code,\n        challenge_code: challenge,\n        challenge_id: challengeId\n      });\n      setCodeState(prev => ({\n        ...prev,\n        feedback: data.feedback,\n        score: data.score\n      }));\n      setProgress(prev => ({\n        ...prev,\n        totalScore: data.total_score,\n        scoreTracker: {\n          ...prev.scoreTracker,\n          [challengeId]: data.score\n        }\n      }));\n    } catch (err) {\n      setGameState(prev => ({\n        ...prev,\n        error: `❌ ${err.message}`,\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\n      }));\n    } finally {\n      setGameState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  }, [code, challenge, challengeId, apiRequest]);\n  const fetchSolution = useCallback(async () => {\n    setGameState(prev => ({\n      ...prev,\n      loading: true,\n      error: null\n    }));\n    try {\n      const data = await apiRequest(\"/get_solution\", {\n        code: challenge\n      });\n      setCodeState(prev => ({\n        ...prev,\n        solution: data.solution || \"No solution available\"\n      }));\n    } catch (err) {\n      setGameState(prev => ({\n        ...prev,\n        error: `❌ ${err.message}`,\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\n      }));\n    } finally {\n      setGameState(prev => ({\n        ...prev,\n        loading: false\n      }));\n    }\n  }, [challenge, apiRequest]);\n  const handleNextOrFinish = useCallback(() => {\n    if (solvedCount >= MAX_QUESTIONS) {\n      endGame();\n      return;\n    }\n    if (!feedback) {\n      setGameState(prev => ({\n        ...prev,\n        error: \"⚠️ Evaluate code first!\"\n      }));\n      return;\n    }\n    fetchChallenge();\n  }, [feedback, solvedCount, fetchChallenge, endGame]);\n\n  // Helper functions\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // UI components\n  const LoginScreen = () => {\n    const handleUsernameChange = e => {\n      const value = e.target.value.replace(/[^a-zA-Z0-9_\\- ]/g, '');\n      setUsername(value.slice(0, 20));\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"neon-title\",\n          children: \"REFACTOR ROYALE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"ENTER USERNAME\",\n            value: username,\n            onChange: handleUsernameChange,\n            className: \"neon-input\",\n            onKeyPress: e => e.key === 'Enter' && username.trim() && startGame()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-highlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startGame,\n          className: \"neon-button neon-button-cyan\",\n          disabled: !username.trim(),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-text\",\n            children: \"START CODING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-glow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: error.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), showReconnect && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startGame,\n            className: \"neon-button neon-button-red\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"button-text\",\n              children: \"RECONNECT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"neon-text\",\n            children: \"SINGLE PLAYER MODE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"neon-text\",\n            children: \"15 MINUTE CHALLENGE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cyber-grid\",\n        children: Array.from({\n          length: 20\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-line\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this);\n  };\n  const GameHeader = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"neon-title\",\n      children: \"CODE OPTIMIZER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"PLAYER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value neon-cyan\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"SOLVED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value neon-purple\",\n          children: [solvedCount, \"/\", MAX_QUESTIONS]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"SCORE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value neon-green flicker\",\n          children: totalScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-label\",\n          children: \"TIME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stat-value neon-red\",\n          children: formatTime(gameTimeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"network-status\",\n      children: isApiHealthy ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-indicator connected\",\n        children: \"\\u25CF SERVER CONNECTED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-indicator disconnected\",\n        children: \"\\u25CF SERVER OFFLINE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n  const ChallengeCard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"challenge-card glassmorphic\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u26A1 CHALLENGE \", challengeId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"difficulty-meter\",\n        children: Array.from({\n          length: 5\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: i < challengeId % 5 ? 'active' : ''\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"neon-code\",\n      children: challenge || \"LOADING CHALLENGE...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n  const GameOverScreen = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-over glassmorphic\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"congratulations\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"neon-flicker\",\n        children: \"MISSION COMPLETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"final-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"FINAL SCORE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"neon-cyan\",\n            children: totalScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CHALLENGES SOLVED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"neon-purple\",\n            children: [solvedCount, \"/\", MAX_QUESTIONS]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"TIME REMAINING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"neon-green\",\n            children: formatTime(gameTimeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restart-buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"neon-button neon-button-cyan\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"button-text\",\n          children: \"NEW GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"button-glow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${showLoginGlow ? 'login-glow' : ''}`,\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      recycle: false,\n      numberOfPieces: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 24\n    }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(GameHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), !isGameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ChallengeCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-container\",\n            children: [/*#__PURE__*/_jsxDEV(CodeMirror, {\n              value: code,\n              height: \"200px\",\n              extensions: [python()],\n              onChange: value => setCodeState(prev => ({\n                ...prev,\n                code: value\n              })),\n              placeholder: \"// OPTIMIZE THIS CODE...\",\n              theme: \"dark\",\n              className: \"neon-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"editor-corner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evaluateCode,\n              disabled: loading,\n              className: \"neon-button neon-button-blue\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-text\",\n                children: \"OPTIMIZE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-glow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextOrFinish,\n              disabled: !feedback || loading,\n              className: \"neon-button neon-button-magenta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-text\",\n                children: solvedCount === MAX_QUESTIONS - 1 ? \"FINISH\" : \"NEXT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-glow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"neon-spinner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner-sector spinner-sector-cyan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner-sector spinner-sector-magenta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner-sector spinner-sector-blue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"neon-text\",\n              children: \"PROCESSING...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 19\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 21\n            }, this), showReconnect && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: fetchChallenge,\n              className: \"neon-button neon-button-red\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-text\",\n                children: \"RETRY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 19\n          }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-card glassmorphic\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"\\uD83E\\uDD16 FEEDBACK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-badge neon-green\",\n                children: [score, \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"feedback-text\",\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: fetchSolution,\n              className: \"neon-button neon-button-purple\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-text\",\n                children: \"VIEW SOLUTION\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 545,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"button-glow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 19\n          }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution-card glassmorphic\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83D\\uDCA1 OPTIMAL SOLUTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"neon-code\",\n              children: solution\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(GameOverScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cyber-grid\",\n        children: Array.from({\n          length: 20\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-line\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7+2+5fZv3YJ1YjEYUTFTj1b608Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","Confetti","CodeMirror","python","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_URL","GAME_DURATION","MAX_QUESTIONS","App","_s","username","setUsername","localStorage","getItem","gameState","setGameState","isPlaying","isGameOver","loading","error","showConfetti","showLoginGlow","showReconnect","isApiHealthy","codeState","setCodeState","code","challenge","challengeId","solution","feedback","score","progress","setProgress","solvedCount","totalScore","gameTimeLeft","scoreTracker","apiRequest","endpoint","body","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","headers","JSON","stringify","signal","clearTimeout","ok","errorData","json","catch","Error","status","errorMessage","name","message","includes","resetGame","removeItem","prev","endGame","checkHealth","interval","setInterval","clearInterval","validateSession","err","timer","startGame","trim","setItem","fetchChallenge","isFirst","_data$challenge","_data$challenge2","data","completed","id","_data$progress","answered","Math","floor","time_remaining","evaluateCode","challenge_code","challenge_id","total_score","fetchSolution","handleNextOrFinish","formatTime","seconds","mins","secs","toString","padStart","LoginScreen","handleUsernameChange","e","value","target","replace","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyPress","key","onClick","disabled","split","map","line","i","Array","from","length","_","GameHeader","ChallengeCard","GameOverScreen","window","location","reload","recycle","numberOfPieces","height","extensions","theme","_c","$RefreshReg$"],"sources":["C:/Users/Aravind Narayanan/refactor-royale/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport { python } from \"@codemirror/lang-python\";\r\nimport \"./App.css\";\r\n\r\n// Constants\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5001\";\r\nconst GAME_DURATION = 900; // 15 minutes in seconds\r\nconst MAX_QUESTIONS = 10;\r\n\r\nfunction App() {\r\n  // State management\r\n  const [username, setUsername] = useState(localStorage.getItem(\"codingChallengeUsername\") || \"\");\r\n  const [gameState, setGameState] = useState({\r\n    isPlaying: false,\r\n    isGameOver: false,\r\n    loading: false,\r\n    error: null,\r\n    showConfetti: false,\r\n    showLoginGlow: false,\r\n    showReconnect: false,\r\n    isApiHealthy: false\r\n  });\r\n  const [codeState, setCodeState] = useState({\r\n    code: \"\",\r\n    challenge: \"\",\r\n    challengeId: null,\r\n    solution: null,\r\n    feedback: null,\r\n    score: null\r\n  });\r\n  const [progress, setProgress] = useState({\r\n    solvedCount: 0,\r\n    totalScore: 0,\r\n    gameTimeLeft: GAME_DURATION,\r\n    scoreTracker: {}\r\n  });\r\n\r\n  // Destructure state for easier access\r\n  const { isPlaying, isGameOver, loading, error, showConfetti, showLoginGlow, showReconnect, isApiHealthy } = gameState;\r\n  const { code, challenge, challengeId, solution, feedback, score } = codeState;\r\n  const { solvedCount, totalScore, gameTimeLeft, scoreTracker } = progress;\r\n\r\n  // API service wrapper with timeout and error handling\r\n  const apiRequest = useCallback(async (endpoint, body = {}) => {\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), 8000); // 8 second timeout\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, ...body }),\r\n        signal: controller.signal\r\n      });\r\n\r\n      clearTimeout(timeoutId);\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      clearTimeout(timeoutId);\r\n      let errorMessage = \"Network error\";\r\n      \r\n      if (error.name === \"AbortError\") {\r\n        errorMessage = \"Request timeout - server is not responding\";\r\n      } else if (error.message.includes(\"Failed to fetch\")) {\r\n        errorMessage = \"Cannot connect to server - check your network\";\r\n      } else {\r\n        errorMessage = error.message;\r\n      }\r\n\r\n      throw new Error(errorMessage);\r\n    }\r\n  }, [username]);\r\n\r\n  // Game management functions\r\n  const resetGame = useCallback(() => {\r\n    localStorage.removeItem(\"codingChallengeUsername\");\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      isPlaying: false,\r\n      isGameOver: false,\r\n      error: \"Session expired - please register again\"\r\n    }));\r\n    setUsername(\"\");\r\n  }, []);\r\n\r\n  const endGame = useCallback(() => {\r\n    setGameState(prev => ({\r\n      ...prev,\r\n      isGameOver: true,\r\n      showConfetti: true\r\n    }));\r\n  }, []);\r\n\r\n  // API health check\r\n  useEffect(() => {\r\n    const checkHealth = async () => {\r\n      try {\r\n        await fetch(`${API_BASE_URL}/health`);\r\n        setGameState(prev => ({ ...prev, isApiHealthy: true }));\r\n      } catch {\r\n        setGameState(prev => ({ ...prev, isApiHealthy: false }));\r\n      }\r\n    };\r\n    \r\n    checkHealth();\r\n    const interval = setInterval(checkHealth, 30000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Session validation\r\n  useEffect(() => {\r\n    const validateSession = async () => {\r\n      if (isPlaying && username) {\r\n        try {\r\n          await apiRequest(\"/get_challenge\");\r\n        } catch (err) {\r\n          if (err.message.includes(\"Invalid session\")) {\r\n            resetGame();\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const timer = setInterval(validateSession, 30000);\r\n    return () => clearInterval(timer);\r\n  }, [isPlaying, username, apiRequest, resetGame]);\r\n\r\n  // Game timer\r\n  useEffect(() => {\r\n    if (!isPlaying || isGameOver) return;\r\n\r\n    const interval = setInterval(() => {\r\n      setProgress(prev => {\r\n        if (prev.gameTimeLeft <= 1) {\r\n          clearInterval(interval);\r\n          endGame();\r\n          return { ...prev, gameTimeLeft: 0 };\r\n        }\r\n        return { ...prev, gameTimeLeft: prev.gameTimeLeft - 1 };\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isPlaying, isGameOver, endGame]);\r\n\r\n  // Game functions\r\n  const startGame = useCallback(async () => {\r\n    if (!username.trim()) {\r\n      setGameState(prev => ({ ...prev, error: \"⚠️ Please enter a username!\" }));\r\n      return;\r\n    }\r\n\r\n    setGameState(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n    try {\r\n      await apiRequest(\"/register\");\r\n      localStorage.setItem(\"codingChallengeUsername\", username);\r\n      \r\n      setGameState(prev => ({\r\n        ...prev,\r\n        isPlaying: true,\r\n        showLoginGlow: true,\r\n        showReconnect: false\r\n      }));\r\n\r\n      setTimeout(() => {\r\n        setGameState(prev => ({ ...prev, showLoginGlow: false }));\r\n        fetchChallenge(true);\r\n      }, 1000);\r\n    } catch (err) {\r\n      setGameState(prev => ({\r\n        ...prev,\r\n        error: `❌ ${err.message}`,\r\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\r\n      }));\r\n    } finally {\r\n      setGameState(prev => ({ ...prev, loading: false }));\r\n    }\r\n  }, [username, apiRequest]);\r\n\r\n  const fetchChallenge = useCallback(async (isFirst = false) => {\r\n    if (solvedCount >= MAX_QUESTIONS || isGameOver) {\r\n      endGame();\r\n      return;\r\n    }\r\n\r\n    setGameState(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n    try {\r\n      const data = await apiRequest(\"/get_challenge\");\r\n\r\n      if (data.completed) {\r\n        endGame();\r\n        return;\r\n      }\r\n\r\n      if (!data.challenge?.code || !data.challenge?.id) {\r\n        throw new Error(\"Invalid challenge data received\");\r\n      }\r\n\r\n      setCodeState(prev => ({\r\n        ...prev,\r\n        challenge: data.challenge.code,\r\n        challengeId: data.challenge.id,\r\n        feedback: null,\r\n        score: null,\r\n        solution: null,\r\n        code: \"\"\r\n      }));\r\n\r\n      if (!isFirst) {\r\n        setProgress(prev => ({\r\n          ...prev,\r\n          solvedCount: data.progress?.answered || prev.solvedCount + 1,\r\n          gameTimeLeft: Math.floor(data.time_remaining || prev.gameTimeLeft)\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      setGameState(prev => ({\r\n        ...prev,\r\n        error: `❌ ${err.message}`,\r\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\r\n      }));\r\n      \r\n      if (!isFirst) {\r\n        setTimeout(fetchChallenge, 2000);\r\n      }\r\n    } finally {\r\n      setGameState(prev => ({ ...prev, loading: false }));\r\n    }\r\n  }, [solvedCount, isGameOver, endGame, apiRequest]);\r\n\r\n  const evaluateCode = useCallback(async () => {\r\n    if (!code.trim()) {\r\n      setGameState(prev => ({ ...prev, error: \"⚠️ Enter code to evaluate!\" }));\r\n      return;\r\n    }\r\n\r\n    if (!code.includes(\"def \") || !code.includes(\"(\") || !code.includes(\")\")) {\r\n      setGameState(prev => ({ ...prev, error: \"⚠️ Code must contain a function definition\" }));\r\n      return;\r\n    }\r\n\r\n    setGameState(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n    try {\r\n      const data = await apiRequest(\"/evaluate\", {\r\n        code,\r\n        challenge_code: challenge,\r\n        challenge_id: challengeId\r\n      });\r\n\r\n      setCodeState(prev => ({ ...prev, feedback: data.feedback, score: data.score }));\r\n      setProgress(prev => ({\r\n        ...prev,\r\n        totalScore: data.total_score,\r\n        scoreTracker: { ...prev.scoreTracker, [challengeId]: data.score }\r\n      }));\r\n    } catch (err) {\r\n      setGameState(prev => ({\r\n        ...prev,\r\n        error: `❌ ${err.message}`,\r\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\r\n      }));\r\n    } finally {\r\n      setGameState(prev => ({ ...prev, loading: false }));\r\n    }\r\n  }, [code, challenge, challengeId, apiRequest]);\r\n\r\n  const fetchSolution = useCallback(async () => {\r\n    setGameState(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n    try {\r\n      const data = await apiRequest(\"/get_solution\", { code: challenge });\r\n      setCodeState(prev => ({ ...prev, solution: data.solution || \"No solution available\" }));\r\n    } catch (err) {\r\n      setGameState(prev => ({\r\n        ...prev,\r\n        error: `❌ ${err.message}`,\r\n        showReconnect: err.message.includes(\"cannot connect\") || err.message.includes(\"timeout\")\r\n      }));\r\n    } finally {\r\n      setGameState(prev => ({ ...prev, loading: false }));\r\n    }\r\n  }, [challenge, apiRequest]);\r\n\r\n  const handleNextOrFinish = useCallback(() => {\r\n    if (solvedCount >= MAX_QUESTIONS) {\r\n      endGame();\r\n      return;\r\n    }\r\n    if (!feedback) {\r\n      setGameState(prev => ({ ...prev, error: \"⚠️ Evaluate code first!\" }));\r\n      return;\r\n    }\r\n    fetchChallenge();\r\n  }, [feedback, solvedCount, fetchChallenge, endGame]);\r\n\r\n  // Helper functions\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // UI components\r\n  const LoginScreen = () => {\r\n    const handleUsernameChange = (e) => {\r\n      const value = e.target.value.replace(/[^a-zA-Z0-9_\\- ]/g, '');\r\n      setUsername(value.slice(0, 20));\r\n    };\r\n\r\n    return (\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-container glassmorphic\">\r\n          <h1 className=\"neon-title\">REFACTOR ROYALE</h1>\r\n          <div className=\"input-container\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ENTER USERNAME\"\r\n              value={username}\r\n              onChange={handleUsernameChange}\r\n              className=\"neon-input\"\r\n              onKeyPress={(e) => e.key === 'Enter' && username.trim() && startGame()}\r\n            />\r\n            <span className=\"input-highlight\"></span>\r\n          </div>\r\n          <button \r\n            onClick={startGame} \r\n            className=\"neon-button neon-button-cyan\"\r\n            disabled={!username.trim()}\r\n          >\r\n            <span className=\"button-text\">START CODING</span>\r\n            <span className=\"button-glow\"></span>\r\n          </button>\r\n          \r\n          {error && (\r\n            <div className=\"error-container\">\r\n              <p className=\"error\">\r\n                {error.split('\\n').map((line, i) => (\r\n                  <span key={i}>\r\n                    {line}\r\n                    <br />\r\n                  </span>\r\n                ))}\r\n              </p>\r\n              {showReconnect && (\r\n                <button \r\n                  onClick={startGame}\r\n                  className=\"neon-button neon-button-red\"\r\n                >\r\n                  <span className=\"button-text\">RECONNECT</span>\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"login-footer\">\r\n            <p className=\"neon-text\">SINGLE PLAYER MODE</p>\r\n            <p className=\"neon-text\">15 MINUTE CHALLENGE</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"cyber-grid\">\r\n          {Array.from({ length: 20 }).map((_, i) => (\r\n            <div key={i} className=\"grid-line\"></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const GameHeader = () => (\r\n    <div className=\"game-header\">\r\n      <h1 className=\"neon-title\">CODE OPTIMIZER</h1>\r\n      <div className=\"stats-container\">\r\n        <div className=\"stat-box\">\r\n          <span className=\"stat-label\">PLAYER</span>\r\n          <span className=\"stat-value neon-cyan\">{username}</span>\r\n        </div>\r\n        <div className=\"stat-box\">\r\n          <span className=\"stat-label\">SOLVED</span>\r\n          <span className=\"stat-value neon-purple\">{solvedCount}/{MAX_QUESTIONS}</span>\r\n        </div>\r\n        <div className=\"stat-box\">\r\n          <span className=\"stat-label\">SCORE</span>\r\n          <span className=\"stat-value neon-green flicker\">{totalScore}</span>\r\n        </div>\r\n        <div className=\"stat-box\">\r\n          <span className=\"stat-label\">TIME</span>\r\n          <span className=\"stat-value neon-red\">{formatTime(gameTimeLeft)}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"network-status\">\r\n        {isApiHealthy ? (\r\n          <span className=\"status-indicator connected\">● SERVER CONNECTED</span>\r\n        ) : (\r\n          <span className=\"status-indicator disconnected\">● SERVER OFFLINE</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const ChallengeCard = () => (\r\n    <div className=\"challenge-card glassmorphic\">\r\n      <div className=\"card-header\">\r\n        <h3>⚡ CHALLENGE {challengeId}</h3>\r\n        <div className=\"difficulty-meter\">\r\n          {Array.from({ length: 5 }).map((_, i) => (\r\n            <span key={i} className={i < (challengeId % 5) ? 'active' : ''}></span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <pre className=\"neon-code\">{challenge || \"LOADING CHALLENGE...\"}</pre>\r\n    </div>\r\n  );\r\n\r\n  const GameOverScreen = () => (\r\n    <div className=\"game-over glassmorphic\">\r\n      <div className=\"congratulations\">\r\n        <h2 className=\"neon-flicker\">MISSION COMPLETE</h2>\r\n        <div className=\"final-stats\">\r\n          <div className=\"stat-row\">\r\n            <span>FINAL SCORE</span>\r\n            <span className=\"neon-cyan\">{totalScore}</span>\r\n          </div>\r\n          <div className=\"stat-row\">\r\n            <span>CHALLENGES SOLVED</span>\r\n            <span className=\"neon-purple\">{solvedCount}/{MAX_QUESTIONS}</span>\r\n          </div>\r\n          <div className=\"stat-row\">\r\n            <span>TIME REMAINING</span>\r\n            <span className=\"neon-green\">{formatTime(gameTimeLeft)}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"restart-buttons\">\r\n        <button \r\n          onClick={() => window.location.reload()}\r\n          className=\"neon-button neon-button-cyan\"\r\n        >\r\n          <span className=\"button-text\">NEW GAME</span>\r\n          <span className=\"button-glow\"></span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={`app-container ${showLoginGlow ? 'login-glow' : ''}`}>\r\n      {showConfetti && <Confetti recycle={false} numberOfPieces={500} />}\r\n      \r\n      {!isPlaying ? (\r\n        <LoginScreen />\r\n      ) : (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-container glassmorphic\">\r\n            <GameHeader />\r\n            \r\n            {!isGameOver ? (\r\n              <>\r\n                <ChallengeCard />\r\n                \r\n                <div className=\"editor-container\">\r\n                  <CodeMirror\r\n                    value={code}\r\n                    height=\"200px\"\r\n                    extensions={[python()]}\r\n                    onChange={(value) => setCodeState(prev => ({ ...prev, code: value }))}\r\n                    placeholder=\"// OPTIMIZE THIS CODE...\"\r\n                    theme=\"dark\"\r\n                    className=\"neon-textarea\"\r\n                  />\r\n                  <div className=\"editor-corner\"></div>\r\n                </div>\r\n                \r\n                <div className=\"button-group\">\r\n                  <button\r\n                    onClick={evaluateCode}\r\n                    disabled={loading}\r\n                    className=\"neon-button neon-button-blue\"\r\n                  >\r\n                    <span className=\"button-text\">OPTIMIZE</span>\r\n                    <span className=\"button-glow\"></span>\r\n                  </button>\r\n                  <button\r\n                    onClick={handleNextOrFinish}\r\n                    disabled={!feedback || loading}\r\n                    className=\"neon-button neon-button-magenta\"\r\n                  >\r\n                    <span className=\"button-text\">\r\n                      {solvedCount === MAX_QUESTIONS - 1 ? \"FINISH\" : \"NEXT\"}\r\n                    </span>\r\n                    <span className=\"button-glow\"></span>\r\n                  </button>\r\n                </div>\r\n                \r\n                {loading && (\r\n                  <div className=\"loading-container\">\r\n                    <div className=\"neon-spinner\">\r\n                      <div className=\"spinner-sector spinner-sector-cyan\"></div>\r\n                      <div className=\"spinner-sector spinner-sector-magenta\"></div>\r\n                      <div className=\"spinner-sector spinner-sector-blue\"></div>\r\n                    </div>\r\n                    <p className=\"neon-text\">PROCESSING...</p>\r\n                  </div>\r\n                )}\r\n                \r\n                {error && (\r\n                  <div className=\"error-container\">\r\n                    <p className=\"error\">{error}</p>\r\n                    {showReconnect && (\r\n                      <button \r\n                        onClick={fetchChallenge}\r\n                        className=\"neon-button neon-button-red\"\r\n                      >\r\n                        <span className=\"button-text\">RETRY</span>\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                \r\n                {feedback && (\r\n                  <div className=\"feedback-card glassmorphic\">\r\n                    <div className=\"card-header\">\r\n                      <h2>🤖 FEEDBACK</h2>\r\n                      <div className=\"score-badge neon-green\">\r\n                        {score}/10\r\n                      </div>\r\n                    </div>\r\n                    <p className=\"feedback-text\">{feedback}</p>\r\n                    <button \r\n                      onClick={fetchSolution} \r\n                      className=\"neon-button neon-button-purple\"\r\n                    >\r\n                      <span className=\"button-text\">VIEW SOLUTION</span>\r\n                      <span className=\"button-glow\"></span>\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                \r\n                {solution && (\r\n                  <div className=\"solution-card glassmorphic\">\r\n                    <h2>💡 OPTIMAL SOLUTION</h2>\r\n                    <pre className=\"neon-code\">{solution}</pre>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <GameOverScreen />\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"cyber-grid\">\r\n            {Array.from({ length: 20 }).map((_, i) => (\r\n              <div key={i} className=\"grid-line\"></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}