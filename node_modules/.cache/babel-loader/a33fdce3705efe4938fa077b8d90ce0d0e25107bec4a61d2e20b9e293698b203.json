{"ast":null,"code":"import{useState,useEffect}from\"react\";import Confetti from\"react-confetti\";import CodeMirror from\"@uiw/react-codemirror\";import{python}from\"@codemirror/lang-python\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[username,setUsername]=useState(\"\");const[isPlaying,setIsPlaying]=useState(false);const[code,setCode]=useState(\"\");const[feedback,setFeedback]=useState(null);const[score,setScore]=useState(null);const[solution,setSolution]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[challenge,setChallenge]=useState(\"\");const[challengeId,setChallengeId]=useState(null);const[solvedCount,setSolvedCount]=useState(0);const[totalScore,setTotalScore]=useState(0);const[gameTimeLeft,setGameTimeLeft]=useState(900);const[isGameOver,setIsGameOver]=useState(false);const[showConfetti,setShowConfetti]=useState(false);const[showLoginGlow,setShowLoginGlow]=useState(false);const[sessionId,setSessionId]=useState(null);const API_BASE_URL=\"http://localhost:5001\";const startGame=async()=>{if(!username.trim()){setError(\"Please enter a username!\");return;}setShowLoginGlow(true);try{const response=await fetch(`${API_BASE_URL}/register`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Registration failed\");}const data=await response.json();setSessionId(data.session_id);setTimeout(()=>{setIsPlaying(true);fetchChallenge(true);setShowLoginGlow(false);},1000);}catch(err){setError(err.message);}};const fetchChallenge=async function(){let isFirst=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;let retryCount=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(isGameOver)return;setLoading(true);setError(null);try{var _data$progress;const response=await fetch(`${API_BASE_URL}/get_challenge`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,session_id:sessionId})});if(response.status===401){setError(\"Session expired. Please refresh.\");setIsPlaying(false);return;}if(response.status===404){throw new Error(\"No challenges available at this time\");}if(!response.ok){throw new Error(`Server responded with ${response.status}`);}const data=await response.json();if(data.error){throw new Error(data.error);}if(data.completed&&((_data$progress=data.progress)===null||_data$progress===void 0?void 0:_data$progress.answered)>=10){endGame(true);return;}setChallenge(data.challenge.code);setChallengeId(data.challenge.id);setFeedback(null);setScore(null);setSolution(null);setCode(\"\");if(!isFirst){setSolvedCount(prev=>{var _data$progress2;const newCount=((_data$progress2=data.progress)===null||_data$progress2===void 0?void 0:_data$progress2.answered)||prev+1;return newCount;});setGameTimeLeft(Math.floor(data.time_remaining||gameTimeLeft));}}catch(err){if(retryCount<2){setTimeout(()=>fetchChallenge(isFirst,retryCount+1),1000);}else{setError(`Failed to load challenge: ${err.message}`);if(err.message.includes(\"No challenges available\")){endGame(false);}}}finally{setLoading(false);}};const evaluateCode=async()=>{if(!code.trim()){setError(\"Please enter code to evaluate!\");return;}if(!code.includes(\"def \")||!code.includes(\"(\")||!code.includes(\")\")){setError(\"Code must contain a function definition\");return;}setLoading(true);setError(null);try{const response=await fetch(`${API_BASE_URL}/evaluate`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,session_id:sessionId,code,challenge_code:challenge,challenge_id:challengeId})});if(response.status===401){setError(\"Session expired. Please refresh.\");setIsPlaying(false);return;}if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Evaluation failed\");}const data=await response.json();setFeedback(data.feedback);setScore(data.score);setTotalScore(data.total_score);}catch(err){setError(err.message);}finally{setLoading(false);}};const fetchSolution=async()=>{setLoading(true);setError(null);try{const response=await fetch(`${API_BASE_URL}/get_solution`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,session_id:sessionId,code:challenge})});if(response.status===401){setError(\"Session expired. Please refresh.\");setIsPlaying(false);return;}if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Failed to fetch solution\");}const data=await response.json();setSolution(data.solution||challenge);}catch(err){setError(err.message);setSolution(challenge);}finally{setLoading(false);}};const handleNextOrFinish=async()=>{if(solvedCount>=9){endGame(true);return;}if(!feedback){setError(\"Please evaluate code first!\");return;}await fetchChallenge();};const endGame=function(){let isComplete=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;setIsGameOver(true);if(isComplete&&solvedCount>=9){setShowConfetti(true);setSolvedCount(10);// Ensure it shows 10/10 when completed\n}};useEffect(()=>{if(!isPlaying||isGameOver)return;const interval=setInterval(()=>{setGameTimeLeft(prev=>{if(prev<=1){clearInterval(interval);endGame(false);return 0;}return prev-1;});},1000);return()=>clearInterval(interval);},[isPlaying,isGameOver]);const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const secs=seconds%60;return`${minutes}:${secs.toString().padStart(2,\"0\")}`;};return/*#__PURE__*/_jsxs(\"div\",{className:`app-container ${showLoginGlow?'login-glow':''}`,children:[showConfetti&&/*#__PURE__*/_jsx(Confetti,{recycle:false,numberOfPieces:500}),!isPlaying?/*#__PURE__*/_jsx(\"div\",{className:\"login-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-container glassmorphic\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"neon-title\",children:\"REFACTOR ROYALE\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"ENTER USERNAME\",value:username,onChange:e=>setUsername(e.target.value),className:\"neon-input\",onKeyPress:e=>e.key==='Enter'&&startGame()}),/*#__PURE__*/_jsx(\"span\",{className:\"input-highlight\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:startGame,className:\"neon-button neon-button-cyan\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"button-text\",children:\"START CODING\"}),/*#__PURE__*/_jsx(\"span\",{className:\"button-glow\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"game-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"game-container glassmorphic\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"neon-title\",children:\"CODE OPTIMIZER\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"PLAYER\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value neon-cyan\",children:username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"SOLVED\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value neon-purple\",children:[solvedCount,\"/10\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"SCORE\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value neon-green\",children:totalScore})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-box\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"TIME\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value neon-red\",children:formatTime(gameTimeLeft)})]})]})]}),!isGameOver?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"challenge-card glassmorphic\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CHALLENGE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"difficulty-meter\",children:Array.from({length:5}).map((_,i)=>/*#__PURE__*/_jsx(\"span\",{className:i<solvedCount%5?'active':''},i))})]}),/*#__PURE__*/_jsx(\"pre\",{className:\"neon-code\",children:challenge||\"LOADING CHALLENGE...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"editor-container\",children:/*#__PURE__*/_jsx(CodeMirror,{value:code,height:\"200px\",extensions:[python()],onChange:value=>setCode(value),placeholder:\"// OPTIMIZE THIS CODE...\",theme:\"dark\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-group\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:evaluateCode,disabled:loading,className:\"neon-button neon-button-blue\",children:\"OPTIMIZE\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextOrFinish,disabled:!feedback||loading,className:\"neon-button neon-button-magenta\",children:solvedCount>=9?\"FINISH\":\"NEXT\"})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),feedback&&/*#__PURE__*/_jsxs(\"div\",{className:\"feedback-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"FEEDBACK\"}),/*#__PURE__*/_jsx(\"p\",{children:feedback}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchSolution,className:\"neon-button\",children:\"VIEW SOLUTION\"})]}),solution&&/*#__PURE__*/_jsxs(\"div\",{className:\"solution-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"OPTIMAL SOLUTION\"}),/*#__PURE__*/_jsx(\"pre\",{children:solution})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"game-over\",children:[solvedCount>=10?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"game-over-title neon-text-green\",children:\"MISSION COMPLETE!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"final-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"FINAL SCORE:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value neon-cyan\",children:totalScore})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"CHALLENGES SOLVED:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value neon-purple\",children:\"10/10\"})]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"game-over-title neon-text-red\",children:\"TIME'S UP!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"final-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"FINAL SCORE:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value neon-cyan\",children:totalScore})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"CHALLENGES SOLVED:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value neon-purple\",children:[solvedCount,\"/10\"]})]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),className:\"neon-button\",children:\"NEW GAME\"})]})]})})]});}export default App;","map":{"version":3,"names":["useState","useEffect","Confetti","CodeMirror","python","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","username","setUsername","isPlaying","setIsPlaying","code","setCode","feedback","setFeedback","score","setScore","solution","setSolution","loading","setLoading","error","setError","challenge","setChallenge","challengeId","setChallengeId","solvedCount","setSolvedCount","totalScore","setTotalScore","gameTimeLeft","setGameTimeLeft","isGameOver","setIsGameOver","showConfetti","setShowConfetti","showLoginGlow","setShowLoginGlow","sessionId","setSessionId","API_BASE_URL","startGame","trim","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","session_id","setTimeout","fetchChallenge","err","message","isFirst","arguments","length","undefined","retryCount","_data$progress","status","completed","progress","answered","endGame","id","prev","_data$progress2","newCount","Math","floor","time_remaining","includes","evaluateCode","challenge_code","challenge_id","total_score","fetchSolution","handleNextOrFinish","isComplete","interval","setInterval","clearInterval","formatTime","seconds","minutes","secs","toString","padStart","className","children","recycle","numberOfPieces","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","Array","from","map","_","i","height","extensions","theme","disabled","window","location","reload"],"sources":["C:/Users/Aravind Narayanan/refactor-royale/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport { python } from \"@codemirror/lang-python\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n  const [solution, setSolution] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [challenge, setChallenge] = useState(\"\");\r\n  const [challengeId, setChallengeId] = useState(null);\r\n  const [solvedCount, setSolvedCount] = useState(0);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [gameTimeLeft, setGameTimeLeft] = useState(900);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [showLoginGlow, setShowLoginGlow] = useState(false);\r\n  const [sessionId, setSessionId] = useState(null);\r\n\r\n  const API_BASE_URL = \"http://localhost:5001\";\r\n\r\n  const startGame = async () => {\r\n    if (!username.trim()) {\r\n      setError(\"Please enter a username!\");\r\n      return;\r\n    }\r\n    setShowLoginGlow(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Registration failed\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSessionId(data.session_id);\r\n      \r\n      setTimeout(() => {\r\n        setIsPlaying(true);\r\n        fetchChallenge(true);\r\n        setShowLoginGlow(false);\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchChallenge = async (isFirst = false, retryCount = 0) => {\r\n    if (isGameOver) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_challenge`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          username,\r\n          session_id: sessionId \r\n        }),\r\n      });\r\n\r\n      if (response.status === 401) {\r\n        setError(\"Session expired. Please refresh.\");\r\n        setIsPlaying(false);\r\n        return;\r\n      }\r\n\r\n      if (response.status === 404) {\r\n        throw new Error(\"No challenges available at this time\");\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server responded with ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      if (data.completed && data.progress?.answered >= 10) {\r\n        endGame(true);\r\n        return;\r\n      }\r\n\r\n      setChallenge(data.challenge.code);\r\n      setChallengeId(data.challenge.id);\r\n      setFeedback(null);\r\n      setScore(null);\r\n      setSolution(null);\r\n      setCode(\"\");\r\n\r\n      if (!isFirst) {\r\n        setSolvedCount(prev => {\r\n          const newCount = data.progress?.answered || prev + 1;\r\n          return newCount;\r\n        });\r\n        setGameTimeLeft(Math.floor(data.time_remaining || gameTimeLeft));\r\n      }\r\n    } catch (err) {\r\n      if (retryCount < 2) {\r\n        setTimeout(() => fetchChallenge(isFirst, retryCount + 1), 1000);\r\n      } else {\r\n        setError(`Failed to load challenge: ${err.message}`);\r\n        if (err.message.includes(\"No challenges available\")) {\r\n          endGame(false);\r\n        }\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const evaluateCode = async () => {\r\n    if (!code.trim()) {\r\n      setError(\"Please enter code to evaluate!\");\r\n      return;\r\n    }\r\n    \r\n    if (!code.includes(\"def \") || !code.includes(\"(\") || !code.includes(\")\")) {\r\n      setError(\"Code must contain a function definition\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/evaluate`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          session_id: sessionId,\r\n          code,\r\n          challenge_code: challenge,\r\n          challenge_id: challengeId,\r\n        }),\r\n      });\r\n      \r\n      if (response.status === 401) {\r\n        setError(\"Session expired. Please refresh.\");\r\n        setIsPlaying(false);\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Evaluation failed\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setFeedback(data.feedback);\r\n      setScore(data.score);\r\n      setTotalScore(data.total_score);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSolution = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_solution`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          username,\r\n          session_id: sessionId,\r\n          code: challenge,\r\n        }),\r\n      });\r\n      \r\n      if (response.status === 401) {\r\n        setError(\"Session expired. Please refresh.\");\r\n        setIsPlaying(false);\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Failed to fetch solution\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSolution(data.solution || challenge);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setSolution(challenge);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleNextOrFinish = async () => {\r\n    if (solvedCount >= 9) {\r\n      endGame(true);\r\n      return;\r\n    }\r\n    if (!feedback) {\r\n      setError(\"Please evaluate code first!\");\r\n      return;\r\n    }\r\n    await fetchChallenge();\r\n  };\r\n\r\n  const endGame = (isComplete = false) => {\r\n    setIsGameOver(true);\r\n    if (isComplete && solvedCount >= 9) {\r\n      setShowConfetti(true);\r\n      setSolvedCount(10); // Ensure it shows 10/10 when completed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPlaying || isGameOver) return;\r\n    \r\n    const interval = setInterval(() => {\r\n      setGameTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(interval);\r\n          endGame(false);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [isPlaying, isGameOver]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <div className={`app-container ${showLoginGlow ? 'login-glow' : ''}`}>\r\n      {showConfetti && <Confetti recycle={false} numberOfPieces={500} />}\r\n      \r\n      {!isPlaying ? (\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"login-container glassmorphic\">\r\n            <h1 className=\"neon-title\">REFACTOR ROYALE</h1>\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"ENTER USERNAME\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                className=\"neon-input\"\r\n                onKeyPress={(e) => e.key === 'Enter' && startGame()}\r\n              />\r\n              <span className=\"input-highlight\"></span>\r\n            </div>\r\n            <button \r\n              onClick={startGame} \r\n              className=\"neon-button neon-button-cyan\"\r\n            >\r\n              <span className=\"button-text\">START CODING</span>\r\n              <span className=\"button-glow\"></span>\r\n            </button>\r\n            {error && <p className=\"error\">{error}</p>}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-container glassmorphic\">\r\n            <div className=\"game-header\">\r\n              <h1 className=\"neon-title\">CODE OPTIMIZER</h1>\r\n              <div className=\"stats-container\">\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">PLAYER</span>\r\n                  <span className=\"stat-value neon-cyan\">{username}</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">SOLVED</span>\r\n                  <span className=\"stat-value neon-purple\">{solvedCount}/10</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">SCORE</span>\r\n                  <span className=\"stat-value neon-green\">{totalScore}</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">TIME</span>\r\n                  <span className=\"stat-value neon-red\">{formatTime(gameTimeLeft)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {!isGameOver ? (\r\n              <>\r\n                <div className=\"challenge-card glassmorphic\">\r\n                  <div className=\"card-header\">\r\n                    <h3>CHALLENGE</h3>\r\n                    <div className=\"difficulty-meter\">\r\n                      {Array.from({ length: 5 }).map((_, i) => (\r\n                        <span key={i} className={i < (solvedCount % 5) ? 'active' : ''}></span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <pre className=\"neon-code\">{challenge || \"LOADING CHALLENGE...\"}</pre>\r\n                </div>\r\n                \r\n                <div className=\"editor-container\">\r\n                  <CodeMirror\r\n                    value={code}\r\n                    height=\"200px\"\r\n                    extensions={[python()]}\r\n                    onChange={(value) => setCode(value)}\r\n                    placeholder=\"// OPTIMIZE THIS CODE...\"\r\n                    theme=\"dark\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"button-group\">\r\n                  <button\r\n                    onClick={evaluateCode}\r\n                    disabled={loading}\r\n                    className=\"neon-button neon-button-blue\"\r\n                  >\r\n                    OPTIMIZE\r\n                  </button>\r\n                  <button\r\n                    onClick={handleNextOrFinish}\r\n                    disabled={!feedback || loading}\r\n                    className=\"neon-button neon-button-magenta\"\r\n                  >\r\n                    {solvedCount >= 9 ? \"FINISH\" : \"NEXT\"}\r\n                  </button>\r\n                </div>\r\n                \r\n                {loading && <div className=\"loading-spinner\"></div>}\r\n                {error && <p className=\"error\">{error}</p>}\r\n                {feedback && (\r\n                  <div className=\"feedback-card\">\r\n                    <h2>FEEDBACK</h2>\r\n                    <p>{feedback}</p>\r\n                    <button onClick={fetchSolution} className=\"neon-button\">\r\n                      VIEW SOLUTION\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                {solution && (\r\n                  <div className=\"solution-card\">\r\n                    <h2>OPTIMAL SOLUTION</h2>\r\n                    <pre>{solution}</pre>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className=\"game-over\">\r\n                {solvedCount >= 10 ? (\r\n                  <>\r\n                    <h2 className=\"game-over-title neon-text-green\">MISSION COMPLETE!</h2>\r\n                    <div className=\"final-stats\">\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">FINAL SCORE:</span>\r\n                        <span className=\"stat-value neon-cyan\">{totalScore}</span>\r\n                      </div>\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">CHALLENGES SOLVED:</span>\r\n                        <span className=\"stat-value neon-purple\">10/10</span>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <h2 className=\"game-over-title neon-text-red\">TIME'S UP!</h2>\r\n                    <div className=\"final-stats\">\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">FINAL SCORE:</span>\r\n                        <span className=\"stat-value neon-cyan\">{totalScore}</span>\r\n                      </div>\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">CHALLENGES SOLVED:</span>\r\n                        <span className=\"stat-value neon-purple\">{solvedCount}/10</span>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                <button onClick={() => window.location.reload()} className=\"neon-button\">\r\n                  NEW GAME\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}