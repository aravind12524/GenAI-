{"ast":null,"code":"var _jsxFileName = \"D:\\\\Refactor Royale\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Confetti from \"react-confetti\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { python } from \"@codemirror/lang-python\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [feedback, setFeedback] = useState(null);\n  const [score, setScore] = useState(null);\n  const [solution, setSolution] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [challenge, setChallenge] = useState(\"\");\n  const [challengeId, setChallengeId] = useState(null);\n  const [solvedCount, setSolvedCount] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [gameTimeLeft, setGameTimeLeft] = useState(900);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showLoginGlow, setShowLoginGlow] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const API_BASE_URL = \"http://localhost:5001\";\n\n  // Function to start game\n  const startGame = async () => {\n    if (!username.trim()) {\n      setError(\"Please enter a username!\");\n      return;\n    }\n    setShowLoginGlow(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Registration failed\");\n      }\n      const data = await response.json();\n      setSessionId(data.session_id);\n      console.log(\"Game started. Session ID:\", data.session_id);\n      setTimeout(() => {\n        setIsPlaying(true);\n        fetchChallenge(true);\n        setShowLoginGlow(false);\n      }, 1000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  // Fetch challenge from server\n  const fetchChallenge = async (isFirst = false, retryCount = 0) => {\n    if (isGameOver || solvedCount >= 10) return;\n    setLoading(true);\n    setError(null);\n    console.log(\"Fetching challenge...\");\n    if (!sessionId) {\n      setError(\"Session ID is missing! Please restart.\");\n      return;\n    }\n    try {\n      var _data$progress;\n      const response = await fetch(`${API_BASE_URL}/get_challenge`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId,\n          question_number: solvedCount + 1\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Challenge received:\", data);\n      if (data.error === \"Invalid session\") {\n        setError(\"Session expired. Please restart the game.\");\n        return;\n      }\n      if (data.completed && ((_data$progress = data.progress) === null || _data$progress === void 0 ? void 0 : _data$progress.answered) >= 10) {\n        endGame(true);\n        return;\n      }\n      setChallenge(data.challenge.code || \"No challenge received\");\n      setChallengeId(data.challenge.id);\n      setFeedback(null);\n      setScore(null);\n      setSolution(null);\n      setCode(\"\");\n      setSolvedCount(prev => prev + 1);\n    } catch (err) {\n      if (retryCount < 2) {\n        setTimeout(() => fetchChallenge(isFirst, retryCount + 1), 1000);\n      } else {\n        setError(`Failed to load challenge: ${err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle next challenge or finish\n  const handleNextOrFinish = async () => {\n    if (solvedCount >= 10) {\n      endGame(true);\n      return;\n    }\n    if (!feedback) {\n      setError(\"Please evaluate code first!\");\n      return;\n    }\n    await fetchChallenge();\n  };\n\n  // End game logic\n  const endGame = (isComplete = false) => {\n    setIsGameOver(true);\n    console.log(\"Game over. Completed:\", isComplete);\n    if (isComplete && solvedCount >= 10) {\n      setShowConfetti(true);\n      setSolvedCount(10);\n    }\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (!isPlaying || isGameOver) return;\n    console.log(\"Timer started.\");\n    const interval = setInterval(() => {\n      setGameTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          endGame(false);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isPlaying, isGameOver]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${showLoginGlow ? \"login-glow\" : \"\"}`,\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      recycle: false,\n      numberOfPieces: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 24\n    }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"neon-title\",\n          children: \"REFACTOR ROYALE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"ENTER USERNAME\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"neon-input\",\n          onKeyPress: e => e.key === \"Enter\" && startGame()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startGame,\n          className: \"neon-button neon-button-cyan\",\n          children: \"START CODING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"neon-title\",\n          children: \"CODE OPTIMIZER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Challenges Solved: \", solvedCount, \"/10\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading challenge...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CodeMirror, {\n          value: challenge,\n          options: {\n            mode: \"python\",\n            theme: \"material\",\n            lineNumbers: true\n          },\n          onChange: (editor, data, value) => setCode(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this), isGameOver ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextOrFinish,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9K+FDE58Y6a4B6k1YcdygOBC5BM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Confetti","CodeMirror","python","jsxDEV","_jsxDEV","App","_s","username","setUsername","isPlaying","setIsPlaying","code","setCode","feedback","setFeedback","score","setScore","solution","setSolution","loading","setLoading","error","setError","challenge","setChallenge","challengeId","setChallengeId","solvedCount","setSolvedCount","totalScore","setTotalScore","gameTimeLeft","setGameTimeLeft","isGameOver","setIsGameOver","showConfetti","setShowConfetti","showLoginGlow","setShowLoginGlow","sessionId","setSessionId","API_BASE_URL","startGame","trim","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","session_id","console","log","setTimeout","fetchChallenge","err","message","isFirst","retryCount","_data$progress","question_number","status","completed","progress","answered","endGame","id","prev","handleNextOrFinish","isComplete","interval","setInterval","clearInterval","className","children","recycle","numberOfPieces","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","options","mode","theme","lineNumbers","editor","_c","$RefreshReg$"],"sources":["D:/Refactor Royale/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport { python } from \"@codemirror/lang-python\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n  const [solution, setSolution] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [challenge, setChallenge] = useState(\"\");\r\n  const [challengeId, setChallengeId] = useState(null);\r\n  const [solvedCount, setSolvedCount] = useState(0);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [gameTimeLeft, setGameTimeLeft] = useState(900);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [showLoginGlow, setShowLoginGlow] = useState(false);\r\n  const [sessionId, setSessionId] = useState(null);\r\n\r\n  const API_BASE_URL = \"http://localhost:5001\";\r\n\r\n  // Function to start game\r\n  const startGame = async () => {\r\n    if (!username.trim()) {\r\n      setError(\"Please enter a username!\");\r\n      return;\r\n    }\r\n    setShowLoginGlow(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Registration failed\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSessionId(data.session_id);\r\n      console.log(\"Game started. Session ID:\", data.session_id);\r\n\r\n      setTimeout(() => {\r\n        setIsPlaying(true);\r\n        fetchChallenge(true);\r\n        setShowLoginGlow(false);\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Fetch challenge from server\r\n  const fetchChallenge = async (isFirst = false, retryCount = 0) => {\r\n    if (isGameOver || solvedCount >= 10) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    console.log(\"Fetching challenge...\");\r\n\r\n    if (!sessionId) {\r\n      setError(\"Session ID is missing! Please restart.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_challenge`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, session_id: sessionId, question_number: solvedCount + 1 }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server responded with ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Challenge received:\", data);\r\n\r\n      if (data.error === \"Invalid session\") {\r\n        setError(\"Session expired. Please restart the game.\");\r\n        return;\r\n      }\r\n\r\n      if (data.completed && data.progress?.answered >= 10) {\r\n        endGame(true);\r\n        return;\r\n      }\r\n\r\n      setChallenge(data.challenge.code || \"No challenge received\");\r\n      setChallengeId(data.challenge.id);\r\n      setFeedback(null);\r\n      setScore(null);\r\n      setSolution(null);\r\n      setCode(\"\");\r\n      setSolvedCount((prev) => prev + 1);\r\n    } catch (err) {\r\n      if (retryCount < 2) {\r\n        setTimeout(() => fetchChallenge(isFirst, retryCount + 1), 1000);\r\n      } else {\r\n        setError(`Failed to load challenge: ${err.message}`);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle next challenge or finish\r\n  const handleNextOrFinish = async () => {\r\n    if (solvedCount >= 10) {\r\n      endGame(true);\r\n      return;\r\n    }\r\n    if (!feedback) {\r\n      setError(\"Please evaluate code first!\");\r\n      return;\r\n    }\r\n    await fetchChallenge();\r\n  };\r\n\r\n  // End game logic\r\n  const endGame = (isComplete = false) => {\r\n    setIsGameOver(true);\r\n    console.log(\"Game over. Completed:\", isComplete);\r\n    if (isComplete && solvedCount >= 10) {\r\n      setShowConfetti(true);\r\n      setSolvedCount(10);\r\n    }\r\n  };\r\n\r\n  // Timer countdown\r\n  useEffect(() => {\r\n    if (!isPlaying || isGameOver) return;\r\n\r\n    console.log(\"Timer started.\");\r\n    const interval = setInterval(() => {\r\n      setGameTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(interval);\r\n          endGame(false);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isPlaying, isGameOver]);\r\n\r\n  return (\r\n    <div className={`app-container ${showLoginGlow ? \"login-glow\" : \"\"}`}>\r\n      {showConfetti && <Confetti recycle={false} numberOfPieces={500} />}\r\n      {!isPlaying ? (\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"login-container glassmorphic\">\r\n            <h1 className=\"neon-title\">REFACTOR ROYALE</h1>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"ENTER USERNAME\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              className=\"neon-input\"\r\n              onKeyPress={(e) => e.key === \"Enter\" && startGame()}\r\n            />\r\n            <button onClick={startGame} className=\"neon-button neon-button-cyan\">\r\n              START CODING\r\n            </button>\r\n            {error && <p className=\"error\">{error}</p>}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-container glassmorphic\">\r\n            <h1 className=\"neon-title\">CODE OPTIMIZER</h1>\r\n            <p>Challenges Solved: {solvedCount}/10</p>\r\n            {loading ? (\r\n              <p>Loading challenge...</p>\r\n            ) : (\r\n              <CodeMirror\r\n                value={challenge}\r\n                options={{ mode: \"python\", theme: \"material\", lineNumbers: true }}\r\n                onChange={(editor, data, value) => setCode(value)}\r\n              />\r\n            )}\r\n            {isGameOver ? (\r\n              <h2>Game Over!</h2>\r\n            ) : (\r\n              <button onClick={handleNextOrFinish}>Next</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}