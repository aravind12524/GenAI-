{"ast":null,"code":"var _jsxFileName = \"E:\\\\royal\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Confetti from \"react-confetti\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { python } from \"@codemirror/lang-python\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [code, setCode] = useState(\"\");\n  const [feedback, setFeedback] = useState(null);\n  const [score, setScore] = useState(null);\n  const [solution, setSolution] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [challenge, setChallenge] = useState(\"\");\n  const [challengeId, setChallengeId] = useState(null);\n  const [solvedCount, setSolvedCount] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const [gameTimeLeft, setGameTimeLeft] = useState(900);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showLoginGlow, setShowLoginGlow] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const [showScores, setShowScores] = useState(false);\n  const [questionScores, setQuestionScores] = useState([]);\n  const API_BASE_URL = \"http://localhost:5001\";\n  const startGame = async () => {\n    if (!username.trim()) {\n      setError(\"Please enter a username!\");\n      return;\n    }\n    setShowLoginGlow(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Registration failed\");\n      }\n      const data = await response.json();\n      setSessionId(data.session_id);\n      setTimeout(() => {\n        setIsPlaying(true);\n        fetchChallenge(true);\n        setShowLoginGlow(false);\n      }, 1000);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const fetchChallenge = async (isFirst = false, retryCount = 0) => {\n    if (isGameOver) return;\n    setLoading(true);\n    setError(null);\n    try {\n      var _data$progress;\n      const response = await fetch(`${API_BASE_URL}/get_challenge`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId\n        })\n      });\n      if (response.status === 401) {\n        setError(\"Session expired. Please refresh.\");\n        setIsPlaying(false);\n        return;\n      }\n      if (response.status === 404) {\n        throw new Error(\"No challenges available at this time\");\n      }\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      if (data.completed && ((_data$progress = data.progress) === null || _data$progress === void 0 ? void 0 : _data$progress.answered) >= 10) {\n        endGame(true);\n        return;\n      }\n      setChallenge(data.challenge.code);\n      setChallengeId(data.challenge.id);\n      setFeedback(null);\n      setScore(null);\n      setSolution(null);\n      setCode(\"\");\n      if (!isFirst) {\n        setSolvedCount(prev => {\n          var _data$progress2;\n          const newCount = ((_data$progress2 = data.progress) === null || _data$progress2 === void 0 ? void 0 : _data$progress2.answered) || prev + 1;\n          return newCount;\n        });\n        setGameTimeLeft(Math.floor(data.time_remaining || gameTimeLeft));\n      }\n    } catch (err) {\n      if (retryCount < 2) {\n        setTimeout(() => fetchChallenge(isFirst, retryCount + 1), 1000);\n      } else {\n        setError(`Failed to load challenge: ${err.message}`);\n        if (err.message.includes(\"No challenges available\")) {\n          endGame(false);\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const evaluateCode = async () => {\n    if (!code.trim()) {\n      setError(\"Please enter code to evaluate!\");\n      return;\n    }\n    if (!code.includes(\"def \") || !code.includes(\"(\") || !code.includes(\")\")) {\n      setError(\"Code must contain a function definition\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/evaluate`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId,\n          code,\n          challenge_code: challenge,\n          challenge_id: challengeId\n        })\n      });\n      if (response.status === 401) {\n        setError(\"Session expired. Please refresh.\");\n        setIsPlaying(false);\n        return;\n      }\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Evaluation failed\");\n      }\n      const data = await response.json();\n      setFeedback(data.feedback);\n      setScore(data.score);\n      setTotalScore(data.total_score);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchSolution = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/get_solution`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId,\n          code: challenge\n        })\n      });\n      if (response.status === 401) {\n        setError(\"Session expired. Please refresh.\");\n        setIsPlaying(false);\n        return;\n      }\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Failed to fetch solution\");\n      }\n      const data = await response.json();\n      setSolution(data.solution || challenge);\n    } catch (err) {\n      setError(err.message);\n      setSolution(challenge);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchQuestionScores = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/get_all_questions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          session_id: sessionId\n        })\n      });\n      const data = await response.json();\n      if (data.questions && players[username]) {\n        const scores = data.questions.map(q => ({\n          id: q.id,\n          code: q.code,\n          score: players[username].attempted_scores[q.id] || 0\n        }));\n        setQuestionScores(scores);\n      }\n    } catch (err) {\n      setError(\"Failed to load question scores\");\n    }\n  };\n  const handleNextOrFinish = async () => {\n    if (solvedCount >= 9) {\n      endGame(true);\n      return;\n    }\n    if (!feedback) {\n      setError(\"Please evaluate code first!\");\n      return;\n    }\n    await fetchChallenge();\n  };\n  const endGame = (isComplete = false) => {\n    setIsGameOver(true);\n    if (isComplete && solvedCount >= 9) {\n      setShowConfetti(true);\n      setSolvedCount(10);\n    }\n  };\n  useEffect(() => {\n    if (!isPlaying || isGameOver) return;\n    const interval = setInterval(() => {\n      setGameTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(interval);\n          endGame(false);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [isPlaying, isGameOver]);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs.toString().padStart(2, \"0\")}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${showLoginGlow ? 'login-glow' : ''}`,\n    children: [showConfetti && /*#__PURE__*/_jsxDEV(Confetti, {\n      recycle: false,\n      numberOfPieces: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 24\n    }, this), !isPlaying ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"neon-title\",\n          children: \"REFACTOR ROYALE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"ENTER USERNAME\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            className: \"neon-input\",\n            onKeyPress: e => e.key === 'Enter' && startGame()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-highlight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startGame,\n          className: \"neon-button neon-button-cyan\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-text\",\n            children: \"START CODING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-glow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container glassmorphic\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"neon-title\",\n            children: \"CODE OPTIMIZER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"PLAYER\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-cyan\",\n                children: username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"SOLVED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-purple\",\n                children: [solvedCount, \"/10\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"SCORE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-green\",\n                children: totalScore\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"TIME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value neon-red\",\n                children: formatTime(gameTimeLeft)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), !isGameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"challenge-card glassmorphic\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"CHALLENGE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"difficulty-meter\",\n                children: Array.from({\n                  length: 5\n                }).map((_, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: i < solvedCount % 5 ? 'active' : ''\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"neon-code\",\n              children: challenge || \"LOADING CHALLENGE...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-container\",\n            children: /*#__PURE__*/_jsxDEV(CodeMirror, {\n              value: code,\n              height: \"200px\",\n              extensions: [python()],\n              onChange: value => setCode(value),\n              placeholder: \"// OPTIMIZE THIS CODE...\",\n              theme: \"dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evaluateCode,\n              disabled: loading,\n              className: \"neon-button neon-button-blue\",\n              children: \"OPTIMIZE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextOrFinish,\n              disabled: !feedback || loading,\n              className: \"neon-button neon-button-magenta\",\n              children: solvedCount >= 9 ? \"FINISH\" : \"NEXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 29\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 27\n          }, this), feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"FEEDBACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: fetchSolution,\n              className: \"neon-button neon-button-purple\",\n              children: \"VIEW SOLUTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 19\n          }, this), solution && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"OPTIMAL SOLUTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: solution\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-over\",\n          children: [solvedCount >= 10 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"game-over-title neon-text-green\",\n              children: \"MISSION COMPLETE!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"final-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"FINAL SCORE:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value neon-cyan\",\n                  children: totalScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"CHALLENGES SOLVED:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value neon-purple\",\n                  children: \"10/10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"game-over-title neon-text-red\",\n              children: \"TIME'S UP!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"final-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"FINAL SCORE:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value neon-cyan\",\n                  children: totalScore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"CHALLENGES SOLVED:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value neon-purple\",\n                  children: [solvedCount, \"/10\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => window.location.reload(),\n              className: \"neon-button neon-button-blue\",\n              children: \"NEW GAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                fetchQuestionScores();\n                setShowScores(!showScores);\n              },\n              className: \"neon-button neon-button-magenta\",\n              children: showScores ? \"HIDE SCORES\" : \"VIEW SCORES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), showScores && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scores-container glassmorphic\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"QUESTION SCORES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scores-grid\",\n              children: questionScores.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-question\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"score-label\",\n                    children: [\"Q\", q.id, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                    className: \"score-code\",\n                    children: q.code\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-value\",\n                  children: [q.score, \"/10\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 27\n                }, this)]\n              }, q.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7CP6mlRbcj3cGgBb7213d3Tspj8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Confetti","CodeMirror","python","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","isPlaying","setIsPlaying","code","setCode","feedback","setFeedback","score","setScore","solution","setSolution","loading","setLoading","error","setError","challenge","setChallenge","challengeId","setChallengeId","solvedCount","setSolvedCount","totalScore","setTotalScore","gameTimeLeft","setGameTimeLeft","isGameOver","setIsGameOver","showConfetti","setShowConfetti","showLoginGlow","setShowLoginGlow","sessionId","setSessionId","showScores","setShowScores","questionScores","setQuestionScores","API_BASE_URL","startGame","trim","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","session_id","setTimeout","fetchChallenge","err","message","isFirst","retryCount","_data$progress","status","completed","progress","answered","endGame","id","prev","_data$progress2","newCount","Math","floor","time_remaining","includes","evaluateCode","challenge_code","challenge_id","total_score","fetchSolution","fetchQuestionScores","questions","players","scores","map","q","attempted_scores","handleNextOrFinish","isComplete","interval","setInterval","clearInterval","formatTime","seconds","minutes","secs","toString","padStart","className","children","recycle","numberOfPieces","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","Array","from","length","_","i","height","extensions","theme","disabled","window","location","reload","_c","$RefreshReg$"],"sources":["E:/royal/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Confetti from \"react-confetti\";\r\nimport CodeMirror from \"@uiw/react-codemirror\";\r\nimport { python } from \"@codemirror/lang-python\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [code, setCode] = useState(\"\");\r\n  const [feedback, setFeedback] = useState(null);\r\n  const [score, setScore] = useState(null);\r\n  const [solution, setSolution] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [challenge, setChallenge] = useState(\"\");\r\n  const [challengeId, setChallengeId] = useState(null);\r\n  const [solvedCount, setSolvedCount] = useState(0);\r\n  const [totalScore, setTotalScore] = useState(0);\r\n  const [gameTimeLeft, setGameTimeLeft] = useState(900);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n  const [showLoginGlow, setShowLoginGlow] = useState(false);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [showScores, setShowScores] = useState(false);\r\n  const [questionScores, setQuestionScores] = useState([]);\r\n\r\n  const API_BASE_URL = \"http://localhost:5001\";\r\n\r\n  const startGame = async () => {\r\n    if (!username.trim()) {\r\n      setError(\"Please enter a username!\");\r\n      return;\r\n    }\r\n    setShowLoginGlow(true);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/register`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ username }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Registration failed\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSessionId(data.session_id);\r\n      \r\n      setTimeout(() => {\r\n        setIsPlaying(true);\r\n        fetchChallenge(true);\r\n        setShowLoginGlow(false);\r\n      }, 1000);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const fetchChallenge = async (isFirst = false, retryCount = 0) => {\r\n    if (isGameOver) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_challenge`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          username,\r\n          session_id: sessionId \r\n        }),\r\n      });\r\n\r\n      if (response.status === 401) {\r\n        setError(\"Session expired. Please refresh.\");\r\n        setIsPlaying(false);\r\n        return;\r\n      }\r\n\r\n      if (response.status === 404) {\r\n        throw new Error(\"No challenges available at this time\");\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Server responded with ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      if (data.completed && data.progress?.answered >= 10) {\r\n        endGame(true);\r\n        return;\r\n      }\r\n\r\n      setChallenge(data.challenge.code);\r\n      setChallengeId(data.challenge.id);\r\n      setFeedback(null);\r\n      setScore(null);\r\n      setSolution(null);\r\n      setCode(\"\");\r\n\r\n      if (!isFirst) {\r\n        setSolvedCount(prev => {\r\n          const newCount = data.progress?.answered || prev + 1;\r\n          return newCount;\r\n        });\r\n        setGameTimeLeft(Math.floor(data.time_remaining || gameTimeLeft));\r\n      }\r\n    } catch (err) {\r\n      if (retryCount < 2) {\r\n        setTimeout(() => fetchChallenge(isFirst, retryCount + 1), 1000);\r\n      } else {\r\n        setError(`Failed to load challenge: ${err.message}`);\r\n        if (err.message.includes(\"No challenges available\")) {\r\n          endGame(false);\r\n        }\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const evaluateCode = async () => {\r\n    if (!code.trim()) {\r\n      setError(\"Please enter code to evaluate!\");\r\n      return;\r\n    }\r\n    \r\n    if (!code.includes(\"def \") || !code.includes(\"(\") || !code.includes(\")\")) {\r\n      setError(\"Code must contain a function definition\");\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/evaluate`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          session_id: sessionId,\r\n          code,\r\n          challenge_code: challenge,\r\n          challenge_id: challengeId,\r\n        }),\r\n      });\r\n      \r\n      if (response.status === 401) {\r\n        setError(\"Session expired. Please refresh.\");\r\n        setIsPlaying(false);\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Evaluation failed\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setFeedback(data.feedback);\r\n      setScore(data.score);\r\n      setTotalScore(data.total_score);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchSolution = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_solution`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          username,\r\n          session_id: sessionId,\r\n          code: challenge,\r\n        }),\r\n      });\r\n      \r\n      if (response.status === 401) {\r\n        setError(\"Session expired. Please refresh.\");\r\n        setIsPlaying(false);\r\n        return;\r\n      }\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Failed to fetch solution\");\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setSolution(data.solution || challenge);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setSolution(challenge);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchQuestionScores = async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/get_all_questions`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ \r\n          username,\r\n          session_id: sessionId \r\n        }),\r\n      });\r\n      \r\n      const data = await response.json();\r\n      if (data.questions && players[username]) {\r\n        const scores = data.questions.map(q => ({\r\n          id: q.id,\r\n          code: q.code,\r\n          score: players[username].attempted_scores[q.id] || 0\r\n        }));\r\n        setQuestionScores(scores);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to load question scores\");\r\n    }\r\n  };\r\n\r\n  const handleNextOrFinish = async () => {\r\n    if (solvedCount >= 9) {\r\n      endGame(true);\r\n      return;\r\n    }\r\n    if (!feedback) {\r\n      setError(\"Please evaluate code first!\");\r\n      return;\r\n    }\r\n    await fetchChallenge();\r\n  };\r\n\r\n  const endGame = (isComplete = false) => {\r\n    setIsGameOver(true);\r\n    if (isComplete && solvedCount >= 9) {\r\n      setShowConfetti(true);\r\n      setSolvedCount(10);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isPlaying || isGameOver) return;\r\n    \r\n    const interval = setInterval(() => {\r\n      setGameTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(interval);\r\n          endGame(false);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [isPlaying, isGameOver]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <div className={`app-container ${showLoginGlow ? 'login-glow' : ''}`}>\r\n      {showConfetti && <Confetti recycle={false} numberOfPieces={500} />}\r\n      \r\n      {!isPlaying ? (\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"login-container glassmorphic\">\r\n            <h1 className=\"neon-title\">REFACTOR ROYALE</h1>\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"ENTER USERNAME\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                className=\"neon-input\"\r\n                onKeyPress={(e) => e.key === 'Enter' && startGame()}\r\n              />\r\n              <span className=\"input-highlight\"></span>\r\n            </div>\r\n            <button \r\n              onClick={startGame} \r\n              className=\"neon-button neon-button-cyan\"\r\n            >\r\n              <span className=\"button-text\">START CODING</span>\r\n              <span className=\"button-glow\"></span>\r\n            </button>\r\n            {error && <p className=\"error\">{error}</p>}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"game-wrapper\">\r\n          <div className=\"game-container glassmorphic\">\r\n            <div className=\"game-header\">\r\n              <h1 className=\"neon-title\">CODE OPTIMIZER</h1>\r\n              <div className=\"stats-container\">\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">PLAYER</span>\r\n                  <span className=\"stat-value neon-cyan\">{username}</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">SOLVED</span>\r\n                  <span className=\"stat-value neon-purple\">{solvedCount}/10</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">SCORE</span>\r\n                  <span className=\"stat-value neon-green\">{totalScore}</span>\r\n                </div>\r\n                <div className=\"stat-box\">\r\n                  <span className=\"stat-label\">TIME</span>\r\n                  <span className=\"stat-value neon-red\">{formatTime(gameTimeLeft)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            {!isGameOver ? (\r\n              <>\r\n                <div className=\"challenge-card glassmorphic\">\r\n                  <div className=\"card-header\">\r\n                    <h3>CHALLENGE</h3>\r\n                    <div className=\"difficulty-meter\">\r\n                      {Array.from({ length: 5 }).map((_, i) => (\r\n                        <span key={i} className={i < (solvedCount % 5) ? 'active' : ''}></span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                  <pre className=\"neon-code\">{challenge || \"LOADING CHALLENGE...\"}</pre>\r\n                </div>\r\n                \r\n                <div className=\"editor-container\">\r\n                  <CodeMirror\r\n                    value={code}\r\n                    height=\"200px\"\r\n                    extensions={[python()]}\r\n                    onChange={(value) => setCode(value)}\r\n                    placeholder=\"// OPTIMIZE THIS CODE...\"\r\n                    theme=\"dark\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"button-group\">\r\n                  <button\r\n                    onClick={evaluateCode}\r\n                    disabled={loading}\r\n                    className=\"neon-button neon-button-blue\"\r\n                  >\r\n                    OPTIMIZE\r\n                  </button>\r\n                  <button\r\n                    onClick={handleNextOrFinish}\r\n                    disabled={!feedback || loading}\r\n                    className=\"neon-button neon-button-magenta\"\r\n                  >\r\n                    {solvedCount >= 9 ? \"FINISH\" : \"NEXT\"}\r\n                  </button>\r\n                </div>\r\n                \r\n                {loading && <div className=\"loading-spinner\"></div>}\r\n                {error && <p className=\"error\">{error}</p>}\r\n                {feedback && (\r\n                  <div className=\"feedback-card\">\r\n                    <h2>FEEDBACK</h2>\r\n                    <p>{feedback}</p>\r\n                    <button \r\n                      onClick={fetchSolution} \r\n                      className=\"neon-button neon-button-purple\"\r\n                    >\r\n                      VIEW SOLUTION\r\n                    </button>\r\n                  </div>\r\n                )}\r\n                {solution && (\r\n                  <div className=\"solution-card\">\r\n                    <h2>OPTIMAL SOLUTION</h2>\r\n                    <pre>{solution}</pre>\r\n                  </div>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <div className=\"game-over\">\r\n                {solvedCount >= 10 ? (\r\n                  <>\r\n                    <h2 className=\"game-over-title neon-text-green\">MISSION COMPLETE!</h2>\r\n                    <div className=\"final-stats\">\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">FINAL SCORE:</span>\r\n                        <span className=\"stat-value neon-cyan\">{totalScore}</span>\r\n                      </div>\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">CHALLENGES SOLVED:</span>\r\n                        <span className=\"stat-value neon-purple\">10/10</span>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <h2 className=\"game-over-title neon-text-red\">TIME'S UP!</h2>\r\n                    <div className=\"final-stats\">\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">FINAL SCORE:</span>\r\n                        <span className=\"stat-value neon-cyan\">{totalScore}</span>\r\n                      </div>\r\n                      <div className=\"stat-item\">\r\n                        <span className=\"stat-label\">CHALLENGES SOLVED:</span>\r\n                        <span className=\"stat-value neon-purple\">{solvedCount}/10</span>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                \r\n                <div className=\"button-group\">\r\n                  <button \r\n                    onClick={() => window.location.reload()} \r\n                    className=\"neon-button neon-button-blue\"\r\n                  >\r\n                    NEW GAME\r\n                  </button>\r\n                  <button \r\n                    onClick={() => {\r\n                      fetchQuestionScores();\r\n                      setShowScores(!showScores);\r\n                    }}\r\n                    className=\"neon-button neon-button-magenta\"\r\n                  >\r\n                    {showScores ? \"HIDE SCORES\" : \"VIEW SCORES\"}\r\n                  </button>\r\n                </div>\r\n                \r\n                {showScores && (\r\n                  <div className=\"scores-container glassmorphic\">\r\n                    <h3>QUESTION SCORES</h3>\r\n                    <div className=\"scores-grid\">\r\n                      {questionScores.map((q) => (\r\n                        <div key={q.id} className=\"score-item\">\r\n                          <div className=\"score-question\">\r\n                            <span className=\"score-label\">Q{q.id}:</span>\r\n                            <pre className=\"score-code\">{q.code}</pre>\r\n                          </div>\r\n                          <div className=\"score-value\">\r\n                            {q.score}/10\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}